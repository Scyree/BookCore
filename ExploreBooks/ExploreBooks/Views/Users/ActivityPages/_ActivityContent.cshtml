@model ActivityViewModel
@inject IUtilityService UtilityService
@inject IApplicationPictureLogic PictureService
@inject IPostService PostService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="container">
    @{
        foreach (var activity in Model.BookActivity)
        {
            <div class="row">
                <div class="offset-1 col-md-10 col-10 border">
                    @{
                        var book = UtilityService.GetBookById(activity.TargetId);
                        var userId = UserManager.GetUserId(User);
                        var posts = PostService.GetAllPostsForTargetId(activity.Id);
                        var commentsActivity = @activity.Id + "display";
                        if (book != null)
                        {
                            @await Html.PartialAsync("ActivityPages/_EntityContent", activity)

                            <div class="row justify-content-center">
                                <div class="col"><hr /></div>
                                <div class="col-auto">
                                    <h6 class="actionLink" onclick="displayComments('@commentsActivity')">Comments</h6>
                                </div>
                                <div class="col"><hr /></div>
                            </div>

                            <div class="commentsActivity" id="@commentsActivity">
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <div class="media p-3">
                                        <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("~/" + PictureService.GetFolderWithFile(userId))" />
                                        <div class="media-body textAlign">
                                            <form asp-controller="CommunityFeedback" asp-action="CreatePost" class="submitPost" role="form">
                                                @Html.Hidden("userId", Guid.Parse(userId))
                                                @Html.Hidden("targetId", activity.Id)
                                                <input type="text" name="postText" placeholder="Say something.." autocomplete="off" />
                                                <button type="button" id="reviewButton" class="btn textButton"></button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            
                                <div id="@activity.Id">
                                    @await Html.PartialAsync("PartialViews/_PostsDisplay", posts)
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <br />
        }
    }
</div>