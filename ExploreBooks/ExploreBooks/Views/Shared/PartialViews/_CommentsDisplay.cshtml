@model IEnumerable<Comment>
@inject IApplicationPictureLogic Service
@inject ILikeService Likes
@inject IUtilityService UtilityService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@foreach (var comment in Model)
{
    var userCommentId = comment.UserId.ToString();
    var userId = UserManager.GetUserId(User);
    var likes = "likes" + @comment.Id;
    var editModal = "editModal" + @comment.Id;
    var deleteModal = "deleteModal" + @comment.Id;
    <div class="media p-2">
        <figure class="profile">
            <img class="mr-0 mt-2 rounded" id="reviewPicture" src="@Url.Content("..\\..\\..\\" + Service.GetFolderWithFile(userCommentId))" />
            <figcaption class="mr-3 btn disabled voteStats">
                <input type="button" class="btn btn-outline-dark disabled border-0 numberOfVotes" id="@likes" value="@Likes.GetNumberOfLikes(comment.Id)" />votes
            </figcaption>
        </figure>
        <div class="media-body textAlign commentContent">
            <h5>@Service.GetNameOfTheSpecifiedId(userCommentId) <small><i>@UtilityService.DisplayDate(comment.Date)</i></small></h5>
            <div>
                @comment.Text

                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="dropdown dropright displayedPosts">
                        <button type="button" class="btn commentOptions rounded-circle" data-toggle="dropdown"><i class="fa fa-reply"></i></button>
                        <div class="dropdown-menu">
                            <button type="submit" class="dropdown-item btn btn-outline-dark" onclick="Upvote(this.value, '@Guid.Parse(userId)')" value="@comment.Id"><i class="fa fa-arrow-up"></i> Upvote</button>
                            <button type="submit" class="dropdown-item btn btn-outline-dark" onclick="Downvote(this.value, '@Guid.Parse(userId)')" value="@comment.Id"><i class="fa fa-arrow-down"></i> Downvote</button>

                            @if (userId == comment.UserId.ToString())
                            {
                                <div class="dropdown-divider"></div>
                                <button type="button" class="dropdown-item btn btn-outline-dark" data-toggle="modal" data-target="#@deleteModal"><i class="fa fa-eraser"></i> Delete</button>
                                <button type="button" class="dropdown-item btn btn-outline-dark" data-toggle="modal" data-target="#@editModal"><i class="fa fa-edit"></i> Edit</button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    if (userId == comment.UserId.ToString())
    {
        @Html.Partial("PartialViews/_EditComment", comment.Id)
    }

    if (userId == comment.UserId.ToString())
    {
        @Html.Partial("PartialViews/_ConfirmDeleteComment", comment.Id)
    }
}

<script>
    $(".submitCommentEdit").submit(function (e) {
        e.preventDefault();
        var target = this.commentId.value;
        var comment = $(this).find("textarea[name='commentText']").val();
        $.ajax({
            url: "/CommunityFeedback/EditComment",
            data: { commentId: target, commentEdited: comment },
            type: "POST",
            success: function () {
                location.reload();
            }
        });
    });
</script>