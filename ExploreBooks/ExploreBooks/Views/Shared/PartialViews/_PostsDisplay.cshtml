@model IEnumerable<Post>
@inject IApplicationPictureLogic Service
@inject ILikeService Likes
@inject IUtilityService UtilityService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<environment include="Development">
    <link rel="stylesheet" href="~/css/ModalStyle.css" />
    <link rel="stylesheet" href="~/css/PartialComments.css" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
</environment>

@foreach (var post in Model)
{
    var userPostId = post.UserId.ToString();
    var userId = UserManager.GetUserId(User);
    var comment = "commentOption" + @post.Id;
    var displayComments = @post.Id;
    var checkUser = SignInManager.IsSignedIn(User);
    var likes = "likes" + post.Id;
    var editModal = "editModal" + @post.Id;
    var deleteModal = "deleteModal" + @post.Id;
    <div class="media p-3 border-top border-bottom">
        <figure class="profile">
            <img class="mr-0 mt-2 rounded" id="reviewPicture" src="@Url.Content("..\\..\\..\\" + Service.GetFolderWithFile(userPostId))" />
            <figcaption class="mr-3 btn disabled voteStats">
                <input type="button" class="btn btn-outline-dark disabled border-0 numberOfVotes" id="@likes" value="@Likes.GetNumberOfLikes(post.Id)"/>votes
            </figcaption>
        </figure>
        <div class="media-body textAlign postContent">
            <h5>
                @Service.GetNameOfTheSpecifiedId(userPostId)
                <small>
                    <i>@UtilityService.DisplayDate(post.Date)</i>
                </small>
            </h5>
            <div>
                @post.Description

                @if (checkUser)
                {
                    <div class="dropdown dropright displayedPosts">
                        <button type="button" class="btn rounded-circle" data-toggle="dropdown"><i class="fa fa-location-arrow"></i></button>
                        <div class="dropdown-menu">
                            <button type="submit" class="dropdown-item btn btn-outline-dark" onclick="Upvote(this.value, '@Guid.Parse(userId)')" value="@post.Id"><i class="fa fa-arrow-up"></i> Upvote</button>
                            <button type="submit" class="dropdown-item btn btn-outline-dark" onclick="Downvote(this.value, '@Guid.Parse(userId)')" value="@post.Id"><i class="fa fa-arrow-down"></i> Downvote</button>
                            <button type="button" class="dropdown-item btn btn-outline-dark" value="@comment" onclick="displayComment(this.value)"><i class="fa fa-comment"></i> Comment</button>

                            @if (userId == post.UserId.ToString())
                            {
                                <div class="dropdown-divider"></div>
                                <button type="button" class="dropdown-item btn btn-outline-dark" data-toggle="modal" data-target="#@deleteModal"><i class="fa fa-eraser"></i> Delete</button>
                                <button type="button" class="dropdown-item btn btn-outline-dark" data-toggle="modal" data-target="#@editModal"><i class="fa fa-edit"></i> Edit</button>
                            }
                        </div>
                    </div>
                }
            </div>
            <br />

            <div id="@displayComments" class="commentsContent">
                @Html.Partial("PartialViews/_CommentsDisplay", post.Comments)
            </div>

            @if (checkUser)
            {
                <div id="@comment" style="display: none;">
                    <div class="media p-2">
                        <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userId))" />
                        <div class="media-body textAlign">
                            <form asp-controller="CommunityFeedback" asp-action="CreateComment" class="submitComment" role="form">
                                @Html.Hidden("userId", Guid.Parse(userId))
                                @Html.Hidden("postId", post.Id)
                                <input type="text" name="commentText" placeholder="Write a comment.." />
                                <button type="button" id="commentButton" class="btn textButton"></button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <br />

    if (userId == post.UserId.ToString())
    {
        @Html.Partial("PartialViews/_EditPost", post.Id)
    }

    if (userId == post.UserId.ToString())
    {
        @Html.Partial("PartialViews/_ConfirmDeletePost", post.Id)
    }
}

<script>
    $(".submitComment").submit(function (e) {
        e.preventDefault();
        var user = this.userId.value;
        var target = this.postId.value;
        var comment = $(this).find("input[name='commentText']").val();
        $.ajax({
            url: "/CommunityFeedback/CreateComment",
            data: { userId: user, postId: target, commentText: comment },
            type: "POST",
            success: function () {
                var result = "@Url.Action("GetAllCommentsForPostId", "CommunityFeedback")?postId=" + target;
                $("#" + target).load(result);
                $(".submitComment").trigger("reset");
                $(":focus").blur();
            }
        });
    });

    $(".submitPostEdit").submit(function (e) {
        e.preventDefault();
        var target = this.postId.value;
        var post = $(this).find("textarea[name='postText']").val();
        $.ajax({
            url: "/CommunityFeedback/EditPost",
            data: { postId: target, postEdited: post },
            type: "POST",
            success: function () {
                location.reload();
            }
        });
    });
</script>