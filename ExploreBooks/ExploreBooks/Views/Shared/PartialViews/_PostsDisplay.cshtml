@model IEnumerable<Post>
@inject IApplicationUserServices Service
@inject ILikeService Likes
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@foreach (var post in Model)
{
    var userPostId = post.UserId.ToString();
    var userId = UserManager.GetUserId(User);
    var comment = "commentOption" + @post.Id;
    var submitComment = "commentForm" + @post.Id;
    var inputComment = "commentText" + @post.Id;
    var displayComments = "displayComments" + @post.Id;
    var checkUser = SignInManager.IsSignedIn(User);
    <div class="media p-3">
        <img class="mr-3 mt-2 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userPostId))" />
        <div class="media-body textAlign">
            <h5>@Service.GetNameOfTheSpecifiedId(userPostId) <small>on @post.Date.ToShortDateString()</small></h5>
            <p>
                @post.Description
            </p>

            @if (checkUser)
            {
                var likes = "likes" + post.Id;
                <div class="btn-group">
                    <button type="submit" class="btn btn-outline-dark" onclick="Upvote(this.value, '@Guid.Parse(userId)')" value="@post.Id"><i class="fa fa-arrow-up"></i></button>
                    <input type="button" class="btn btn-outline-dark disabled" id="@likes" value="@Likes.GetNumberOfLikes(post.Id)" />
                    <button type="submit" class="btn btn-outline-dark" onclick="Downvote(this.value, '@Guid.Parse(userId)')" value="@post.Id"><i class="fa fa-arrow-down"></i></button>
                    <button type="button" class="btn btn-outline-dark" value="@comment" onclick="displayComment(this.value)"><i class="fa fa-comment"></i></button>
                </div>
            }
           
            <div id="@displayComments">
                @Html.Partial("PartialViews/_CommentsDisplay", post.Comments)
            </div>

            @if (checkUser)
            {
                <div id="@comment" style="display: none;">
                    <div class="media p-2">
                        <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userId))" />
                        <div class="media-body textAlign">
                            <form asp-controller="Comments" asp-action="Create" method="post" id="@submitComment" role="form">
                                @Html.Hidden("userId", Guid.Parse(userId))
                                @Html.Hidden("postId", post.Id)
                                <input type="text" id="@inputComment" name="@inputComment" placeholder="Write a comment.."/>
                                <button type="button" id="commentButton" class="btn textButton"></button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script>
        $("#@submitComment").submit(function (e) {
            e.preventDefault();
            var user = "@Guid.Parse(UserManager.GetUserId(User))";
            var target = "@post.Id";
            var post = $("#@inputComment").val();
            $.ajax({
                url: "/Comments/Create",
                data: { userId: user, postId: target, commentText: post },
                type: "POST",
                success: function() {
                    var result = "@Url.Action("GetAllCommentsForUserId", "Comments")?postId=" + target;
                    $("#@displayComments").load(result);
                    $("#@inputComment").val("");
                }
            });
        });
    </script>
}

<script>
    function displayComment(element) {
        var target = document.getElementById(element);

        if (target.style.display === "none") {
            target.style.display = "block";
        } else {
            target.style.display = "none";
        }
    }
    
    function Upvote(target, user) {
        $.ajax({
            url: "/Like/Upvote",
            data: { targetId: target, userId: user },
            type: "POST",
            success: function () {
                $.ajax({
                    url: "/Like/GetNumberOfLikes",
                    data: { targetId: target },
                    type: "GET",
                    success: function (response) {
                        var targetInput = "#likes" + target;
                        $(targetInput).val(response);
                    }
                });
            }
        });
    }

    function Downvote(target, user) {
        $.ajax({
            url: "/Like/Downvote",
            data: { targetId: target, userId: user },
            type: "POST",
            success: function () {
                $.ajax({
                    url: "/Like/GetNumberOfLikes",
                    data: { targetId: target },
                    type: "GET",
                    success: function (response) {
                        var targetInput = "#likes" + target;
                        $(targetInput).val(response);
                    }
                });
            }
        });
    }
</script>
