@model Book
@inject IAuthorService Authors
@inject IGenreService Genres
@inject IApplicationUserServices Service
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUtilityService UtilityService

@{
    ViewData["Title"] = "Details";
    var save = TempData["ReadAction"];
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/Book.css" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
</environment>

<br />
<br />

@Html.Partial("_StatusMessage", save)

<div class="container text-center">
    <div class="row">
        <div class="col-md-3 col-3 infoBooks">
            <div class="col-md-12 col-12">
                <div class="card card-body bg-light">
                    <img class="rounded" id="imageDetails" src="@Url.Content("..\\..\\images\\" + Model.Folder + "\\" + Model.ImageName)" />
                </div>
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = UserManager.GetUserId(User);
                    <div class="card card-body bg-light">
                        <button type="submit" class="btn btn-danger" onclick="ReadAction('@Model.Id', '@user', 'Plan to read')">Plan to read</button>
                        <br />
                        <button type="submit" class="btn btn-secondary" onclick="ReadAction('@Model.Id', '@user', 'Reading')">Reading</button>
                        <br />
                        <button type="submit" class="btn" onclick="ReadAction('@Model.Id', '@user', 'Read')">Read</button>
                        <br />
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 col-6">
            <div class="col-md-12 col-12">
                <div class="row">
                    <h2 class="col-8" style="font-style: italic">
                        @Model.Title
                    </h2>
                    
                    <div class="col-4">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var user = UserManager.GetUserId(User);
                            if (UtilityService.GetBookStateById(Model.Id, Guid.Parse(user)).IsFavorite)
                            {
                                <button type="submit" class="btn btn-secondary" onclick="RemoveFavorite('@Model.Id', '@user')"><i class="fa fa-heart-o"></i></button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-danger" onclick="AddFavorite('@Model.Id', '@user')"><i class="fa fa-heart"></i></button>
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-12">
                        <div class="card card-body bg-light">
                            <p>
                                @Model.Description
                            </p>
                        </div>
                    </div>
                </div>
                <br />
                <br />
                @*<div class="container border">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var userId = UserManager.GetUserId(User);
                            <div class="media p-3">
                                <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userId))" />
                                <div class="media-body textAlign">
                                    <form asp-controller="Posts" asp-action="Create" method="post" class="submitPost" role="form">
                                        @Html.Hidden("userId", Guid.Parse(userId))
                                        @Html.Hidden("targetId", Model.Id)
                                        <input type="text" name="postText" placeholder="Write a review.." />
                                        <button type="button" id="reviewButton" class="btn textButton"></button>
                                    </form>
                                </div>
                            </div>
                        }

                        <div id="@Model.Id">
                            @Html.Partial("PartialViews/_PostsDisplay", Model.Posts)
                        </div>
                    </div>*@
            </div>
        </div>
        <div class="col-md-3 col-3">
            <div class="row">
                <div class="col-md-12 col-12">
                    <div class="card card-body bg-light">
                        <div class="row">
                            <div class="col"><hr /></div>
                            <div class="col-auto"><h6>Authors</h6></div>
                            <div class="col"><hr /></div>
                        </div>
                        @{
                            var authors = Model.Authors.ToList();
                            var lastAuthor = Authors.GetAuthorById(authors[authors.Count - 1].AuthorId);
                            for (var index = 0; index < authors.Count - 1; ++index)
                            {
                                var authorDisplay = Authors.GetAuthorById(authors[index].AuthorId);

                                <a asp-controller="Authors" asp-action="Details" asp-route-id="@authorDisplay.Id"><h7>@authorDisplay.Name, </h7></a>
                            }

                            <a asp-controller="Authors" asp-action="Details" asp-route-id="@lastAuthor.Id">@lastAuthor.Name</a>
                        }
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <div class="row">
                            <div class="col"><hr /></div>
                            <div class="col-auto"><h6>Genres</h6></div>
                            <div class="col"><hr /></div>
                        </div>
                        <p>
                            @{
                                var genres = Model.Genres.ToList();

                                for (var index = 0; index < genres.Count - 1; ++index)
                                {
                                    var genreDisplay = Genres.GetGenreById(genres[index].GenreId);

                                    <h7>@genreDisplay.Text, </h7>
                                }

                                @Genres.GetGenreById(genres[genres.Count - 1].GenreId).Text
                            }
                        </p>
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <div class="row">
                            <div class="col"><hr /></div>
                            <div class="col-auto"><h6>Details</h6></div>
                            <div class="col"><hr /></div>
                        </div>
                        <p>
                            @Html.DisplayFor(modelItem => Model.Details)
                        </p>
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <div class="row">
                            <div class="col"><hr /></div>
                            <div class="col-auto"><h6>Actions</h6></div>
                            <div class="col"><hr /></div>
                        </div>
                        <p>
                            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                            <a asp-action="Index">Back to List</a>
                        </p>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12 col-12">
                    <div class="card card-body bg-light">
                        <p>
                            More stuff..
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<environment include="Development">
    <script>
        $(".submitPost").submit(function(e) {
            e.preventDefault();
            var user = this.userId.value;
            var target = this.targetId.value;
            var post = $(this).find("input[name='postText']").val();
            $.ajax({
                url: "/Posts/Create",
                data: { userId: user, targetId: target, postText: post },
                type: "POST",
                success: function() {
                    var result = "@Url.Action("GetAllPostsForUserId", "Posts")?targetId=" + target;
                    $("#" + target).load(result);
                    $(".submitPost").trigger("reset");
                    $(":focus").blur();
                }
            });
        });
    </script>
    <script src="~/js/PostsDisplay.js"></script>
    <script src="~/js/Books.js"></script>
</environment>
