@model Book
@inject IAuthorService Authors
@inject IGenreService Genres
@inject IApplicationUserServices Service
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/Book.css" />
</environment>

<br />
<br />

<div class="container-fluid text-center">
    <div class="row">
        <div class="col-md-3 col-3 infoBooks">
            <div class="col-md-12 col-12">
                <div class="card card-body bg-light">
                    <img class="rounded" id="imageDetails" src="@Url.Content("..\\..\\images\\" + Model.Folder + "\\" + Model.ImageName)" />
                </div>
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = UserManager.GetUserId(User);
                    <div class="card card-body bg-light">
                        @using (Html.BeginForm("Create", "Users", new {bookId = Model.Id, userId = user, actionName = "Plan to read"}, FormMethod.Post, null, new {}))
                        {
                            <button type="submit" class="btn btn-danger">Plan to read</button>
                        }
                        <br />
                        @using (Html.BeginForm("Create", "Users", new { bookId = Model.Id, userId = user, actionName = "Reading" }, FormMethod.Post, null, new {}))
                        {
                            <button type="submit" class="btn btn-secondary">Reading</button>
                        }
                        <br />
                        @using (Html.BeginForm("Create", "Users", new { bookId = Model.Id, userId = user, actionName = "Read" }, FormMethod.Post, null, new {}))
                        {
                            <button type="submit" class="btn">Read</button>
                        }
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 col-6">
            <div class="col-md-12 col-12">
                <div class="row">
                    <h2 style="font-style: italic">
                        @Model.Title
                    </h2>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = UserManager.GetUserId(User);
                        <h4>
                            @using (Html.BeginForm("AddToFavorites", "Users", new {bookId = Model.Id, userId = user}, FormMethod.Post, null, new {}))
                            {
                                <button type="submit" class="btn btn-danger"><i class="fa fa-heart"></i></button>
                            }
                            @using (Html.BeginForm("RemoveFromFavorites", "Users", new {bookId = Model.Id, userId = user}, FormMethod.Post, null, new {}))
                            {
                                <button type="submit" class="btn btn-danger"><i class="fa fa-heart-o"></i></button>
                            }
                        </h4>
                    }
                </div>
                <div class="row">
                    <div class="col-md-12 col-12">
                        <div class="card card-body bg-light">
                            <p>
                                @Model.Description
                            </p>
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <div class="container border">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var userId = UserManager.GetUserId(User);
                        <div class="media p-3">
                            <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userId))" />
                            <div class="media-body textAlign">
                                @using (Html.BeginForm("Create", "Posts", new {userId = Guid.Parse(userId), targetId = Model.Id, bookRating = 5}, FormMethod.Post, null, new {}))
                                {
                                    <input type="text" id="reviewText" name="reviewText" placeholder="Write a review.."/>
                                    <button type="button" id="reviewButton" class="btn textButton"></button>
                                }
                            </div>
                        </div>
                    }
                    
                    @Html.Partial("~/Views/PartialViews/_PostsDisplay.cshtml", Model.Posts)
                </div>
            </div>
        </div>
        <div class="col-md-3 col-3">
            <div class="row">
                <div class="col-md-12 col-12">
                    <div class="card card-body bg-light">
                        <h5>Authors:</h5>
                        @{
                            var authors = Model.Authors.ToList();

                            for (var index = 0; index < authors.Count - 1; ++index)
                            {
                                var authorDisplay = Authors.GetAuthorById(authors[index].AuthorId);

                                <h7>@authorDisplay.Name, </h7>
                            }

                            @Authors.GetAuthorById(authors[authors.Count - 1].AuthorId).Name
                        }
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <h5>Genres:</h5>
                        <p>
                            @{
                                var genres = Model.Genres.ToList();

                                for (var index = 0; index < genres.Count - 1; ++index)
                                {
                                    var genreDisplay = Genres.GetGenreById(genres[index].GenreId);

                                    <h7>@genreDisplay.Text, </h7>
                                }

                                @Genres.GetGenreById(genres[genres.Count - 1].GenreId).Text
                            }
                        </p>
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <h5>Details:</h5>
                        <p>
                            @Html.DisplayFor(modelItem => Model.Details)
                        </p>
                    </div>
                    <br />
                    <div class="card card-body bg-light">
                        <h5>Actions:</h5>
                        <p>
                            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                            <a asp-action="Index">Back to List</a>
                        </p>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12 col-12">
                    <div class="card card-body bg-light">
                        <p>
                            More stuff..
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
        var reviewText = document.getElementById("reviewText");
        
        if (reviewText) {
            reviewText.addEventListener("keyup",
                function (event) {
                    event.preventDefault();

                    if (event.keyCode == 13) {
                        document.getElementById("reviewButton").click();
                    }
                });
        }

        //$("#reviewButton").click(function () {
        //    $.ajax({
        //        url: "~/Views/Shared/_ReviewsDisplay.cshtml",
        //        type: "GET",
        //        success: function () {
        //            $("#displayReviews").html("BAKA");
        //        }
        //    });
        //});
    
</script>
