@model IEnumerable<Recommendation>
@inject IUtilityService UtilityService
@inject IRecommendationService Service

@{
    ViewData["Title"] = "Index";
}

<environment include="Development">
    <link rel="stylesheet" href="~/css/Books/Book.css" />
    <link rel="stylesheet" href="~/css/Books/Recommendations.css" />
</environment>

<br />
<br />
<div class="row justify-content-center">
    <h3>
        Browse through all books
    </h3>
</div>
<div class="row justify-content-center">
    <h5>
        <i>
            <a asp-action="Create">..or add a new one</a>
        </i>
    </h5>
</div>
<br />
<div class="container">
    @{
        if (Model != null)
        {
            var books = Model.ToList();
            <div class="row">
                @for (var index = 0; index < books.Count; ++index)
                {
                    var checkIndex = index + 1;
                    var book = UtilityService.GetBookById(books[index].BookRecommended);
                    var recommendedDetails = "recommendedDetails" + books[index].Id;

                    <div class="col-md-3 col-3">
                        <a data-toggle="modal" data-target="#@recommendedDetails">
                            <img class="rounded" id="bookImage" src="@Url.Content("..\\..\\..\\images\\" + book.Folder + "\\" + book.ImageName)" />
                        </a>
                    </div>

                    if (checkIndex % 4 == 0)
                    {
                        <div class="w-100"></div>
                        <br />
                    }
                    
                    @await Html.PartialAsync("DetailsPages/_RecommendationDetails", books[index])
                }
            </div>
        }
        else
        {
            <h5>
                For the moment there are no recommendations!
            </h5>
        }
    }
</div>