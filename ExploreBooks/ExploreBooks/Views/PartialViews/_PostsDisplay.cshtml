@model IEnumerable<Post>
@inject IApplicationUserServices Service
@inject ILikeService Likes
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@foreach (var post in Model)
{
    var userReviewId = post.UserId.ToString();
    <div class="media p-3">
        <img class="mr-3 mt-2 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userReviewId))" />
        <div class="media-body textAlign">
            <h5>@Service.GetNameOfTheSpecifiedId(userReviewId) <small>on @post.Date.ToShortDateString()</small></h5>
            <p>
                @post.Description
            </p>

            @if (SignInManager.IsSignedIn(User))
            {
                var comment = "commentOption" + @post.Id;
                var likes = "likes" + @post.Id;
                <div class="btn-group">
                    <button type="submit" class="btn btn-outline-dark" onclick="Upvote(this.value)" value="@post.Id"><i class="fa fa-arrow-up"></i></button>
                    <input type="button" class="btn btn-outline-dark disabled" id="@likes" value="@Likes.GetNumberOfLikes(post.Id)" />
                    <button type="submit" class="btn btn-outline-dark" onclick="Downvote(this.value)" value="@post.Id"><i class="fa fa-arrow-down"></i></button>
                    <button type="button" class="btn btn-outline-dark" value="@comment" onclick="displayComment(this.value)"><i class="fa fa-comment"></i></button>
                </div>

                <script>

                    function Upvote(target) {
                        $.ajax({
                            url: "/Like/Upvote",
                            data: { targetId: target, userId: user },
                            type: "POST",
                            success: function () {
                                $.ajax({
                                    url: "/Like/GetNumberOfLikes?targetId=" + target,
                                    type: "GET",
                                    success: function (response) {
                                        var targetInput = "#likes" + target;
                                        $(targetInput).val(response);
                                    }
                                });
                            }
                        });
                    }

                    function Downvote(target) {
                        $.ajax({
                            url: "/Like/Downvote",
                            data: { targetId: target, userId: user },
                            type: "POST",
                            success: function () {
                                $.ajax({
                                    url: "/Like/GetNumberOfLikes",
                                    data: { targetId: target },
                                    type: "GET",
                                    success: function (response) {
                                        var targetInput = "#likes" + target;
                                        $(targetInput).val(response);
                                    }
                                });
                            }
                        });
                    }

                </script>
            }

            @foreach (var comment in post.Comments)
            {
                var userCommentId = comment.UserId.ToString();
                <div class="media p-2">
                    <img class="mr-3 mt-2 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userCommentId))" />
                    <div class="media-body textAlign">
                        <h5>@Service.GetNameOfTheSpecifiedId(userCommentId) <small>on @post.Date.ToShortDateString()</small></h5>
                        <p>@comment.Text</p>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            var likes = "likes" + @comment.Id;
                            <div class="btn-group">
                                <button type="submit" class="btn btn-outline-dark" onclick="Upvote(this.value)" value="@comment.Id"><i class="fa fa-arrow-up"></i></button>
                                <input type="button" class="btn btn-outline-dark disabled" id="@likes" value="@Likes.GetNumberOfLikes(comment.Id)" />
                                <button type="submit" class="btn btn-outline-dark" onclick="Downvote(this.value)" value="@comment.Id"><i class="fa fa-arrow-down"></i></button>
                            </div>

                            <script>

                                function Upvote(target) {
                                    $.ajax({
                                        url: "/Like/Upvote",
                                        data: { targetId: target, userId: user },
                                        type: "POST",
                                        success: function () {
                                            $.ajax({
                                                url: "/Like/GetNumberOfLikes?targetId=" + target,
                                                type: "GET",
                                                success: function (response) {
                                                    var targetInput = "#likes" + target;
                                                    $(targetInput).val(response);
                                                }
                                            });
                                        }
                                    });
                                }

                                function Downvote(target) {
                                    $.ajax({
                                        url: "/Like/Downvote",
                                        data: { targetId: target, userId: user },
                                        type: "POST",
                                        success: function () {
                                            $.ajax({
                                                url: "/Like/GetNumberOfLikes",
                                                data: { targetId: target },
                                                type: "GET",
                                                success: function (response) {
                                                    var targetInput = "#likes" + target;
                                                    $(targetInput).val(response);
                                                }
                                            });
                                        }
                                    });
                                }

                            </script>
                        }
                    </div>
                </div>
            }

            @if (SignInManager.IsSignedIn(User))
            {
                var userId = UserManager.GetUserId(User);
                var comment = "commentOption" + @post.Id;
                <div id="@comment" style="display: none;">
                    <div class="media p-2">
                        <img class="mr-3 rounded" id="reviewPicture" src="@Url.Content("..\\..\\" + Service.GetFolderWithFile(userId))" />
                        <div class="media-body textAlign">
                            @using (Html.BeginForm("Create", "Comments", new { userId = Guid.Parse(userId), postId = post.Id }, FormMethod.Post, null, new { }))
                            {
                                <input type="text" id="commentText" name="commentText" placeholder="Write a comment.." />
                                <button type="button" id="commentButton" class="btn textButton"></button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<script>
    if (@SignInManager.IsSignedIn(User)) {
        var commentText = document.getElementById("commentText");
        var reviewText = document.getElementById("reviewText");
        var user = "@Guid.Parse(UserManager.GetUserId(User))";

        if (commentText) {
            commentText.addEventListener("keyup",
                function (event) {
                    event.preventDefault();

                    if (event.keyCode == 13) {
                        document.getElementById("commentButton").click();
                    }
                });
        }

        if (reviewText) {
            reviewText.addEventListener("keyup",
                function (event) {
                    event.preventDefault();

                    if (event.keyCode == 13) {
                        document.getElementById("reviewButton").click();
                    }
                });
        }


        function displayComment(element) {
            var target = document.getElementById(element);

            if (target.style.display === "none") {
                target.style.display = "block";
            } else {
                target.style.display = "none";
            }
        }
    }
</script>
